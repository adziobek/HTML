Linki:
------
***https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model
https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction
https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#The_browser_main_functionality
http://taligarsiel.com/Projects/howbrowserswork1.htm#Parsing_general - świetnie opisane jak parser działa i jak DOM powstaje

Pytania:
---------
1.Co to jest DOM?
DOM - Document Object Model, api dla języków programowania(głównie JavaScriptu) by mogły
komunikować się ze stroną w HTMLu, modyfikować jej zawartość, style.
Przeglądarki implementują standardy zamieszczone na stronach:
https://dom.spec.whatwg.org/
oraz
https://www.w3.org/DOM/

2.Czym w DOM jest strona HTML?
Jest to document, zarówno w HTMLu jak i wyświetlany w przeglądarce.

3.Czy DOM jest językiem programowania?
Nie, nie jest. Ale bez niego JS nie miałby pojęcia o HTMLu, XMLu
Zawartość strony jest przechowywana w DOM.

4.Czym różnią się metody window.onload vs. document.onload?
window.onload - jest wywoływany gdy DOM powstanie, zostanie załadowana cała strona oraz
jej zawartość, tj. skrypty, css, orazki

document.onload - jest wywoływany gdy kiedy powstanie DOM, ale nie zostanie załadowana
całość zawartości strony

5.Jak jest parsowana strona html, kiedy jest tworzony DOM, kiedy są odpalane pliki
js pobierane lub będące inline w elemencie head htmla?

Na początku przeglądarka pobiera dokument .html z sieci.
Następnie, zaczyna parsować ten dokument i tworzyć drzewo DOM ze sparsowanych elementów.
Następnie, gdy przeglądarka natknie się na odnośnik do zewnętrzengo skryptu, np.

<html>
<head>
    <sctipt src="http:/dobryskrypt.js...></sctipt>
    ...
przeglądarka pobiera ten skrypt i wstrzymuje parsowanie dalszej części htmla.
Po pobraniu skryptu, uruchamia go.
Gdy skrypt zostanie wykonany przeglądarka wznawia parsowanie dalszej części htmla.
https://stackoverflow.com/questions/436411/where-should-i-put-script-tags-in-html-markup?answertab=votes#tab-top

6.Dlaczego przeglądarka czeka na pobranie i wykonanie skryptu js?
Dlatego, że może w nim być kod zmieniający strukture htmla, dodający nowy element, np.
document.write("<p>nowy akapit</p>")

7.Dlaczego przy próbie pobrania elementu w skrypcie i zmiany jego tekstu dostajemy błąd:
Uncaught TypeError: Cannot set property 'innerHTML' of null
dla skryptu:
var ptext = document.getElementById("ptext");
            ptext.innerHTML = newtext;
?
Dlatego, że parser zatrzymał się na skrypcie, nie doszedł jeszcze do tego elementu w htmlu
i nie dodał do do drzewa DOM by móc po niego sięgać :)

8.Jakie atrybuty wprowadza HTML5 aby usprawnić pobieranie skryptów i parsowanie html?
HTML 5 wprowadza dwa atrybuty: async oraz defer. W obu przypadkach pobieranie skryptów
nie wstrzymuje pracy parsera i DOM jest budowany dalej. Możemy je stosować jedynie
podczas pobierania zewnętrzengo skryptu <script src="" async defer></script> - inaczej
nie zadziałają.

async- skrypty są pobierane równolegle, uruchamiane są asynchronicznie(asynchronously),
       zaraz po pobraniu(czyli ten który szybciej się pobierze jest odpalany jako pierwszy).
       Jeśli ustawimy async=false to skrypty wykonają się synchronicznie, sekwencyjnie, jeden po drugim.

defer- skrypty są odalane w kolejności, w jakiej wymieniliśmy je w htmlu. Są odpalane po
sparsowaniu całego dokumentu i utworzeniu pełnego DOMu ale jeszcze przed wywołaniem zdarzenia
DOMContentLoaded.

https://developers.google.com/speed/docs/insights/BlockingJS
https://developer.mozilla.org/en/docs/Web/HTML/Element/script

9.Kiedy są pobierane i wykonywane sktypty z atrybutami async i defer oraz bez tych atrybutów?

<script src="http://jQuery-3.2.1.js"></script>
parser dociera do sktyptu
wstrzyma dalsze parsowanie html
pobiera skrypt
wykonuje skrypt
wznawia parsowanie htmla

<script src="http://jQuery-3.2.1.js" async></script>
<script src="http://jPlny-3.2.1.js" async></script>
parser dociera do skryptu
pobiera skrypty i równolegle parsuje dalszą część html
gdy skończy pobierać skrypty, uruchamia je, który szybciej został pobrany
(nie czeka na zakończenie parsowania i zbudowanie DOMu by uruchomić skrypty)

<script src="http://jQuery-3.2.1.js" defer></script>
<script src="http://jPlny-3.2.1.js" defer></script>
parser dociera do sktyptów
pobiera skrypty i równolegle parsuje dalszą część html
gdy skończy pobierać skrypty parsować stronę, uruchamia je w takiej
kolejności w jakiej były wymienione w HTMLu
(czeka na zakończenie parsowania i zbudowanie DOMu by uruchomić skrypty)

http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html
https://stackoverflow.com/questions/10808109/script-tag-async-defer

10.Czy za pomocą skryptów pobieranych asynchronicznie (async lub defer) można
pisać do dokumentu?
Nie, nie można robić document.write('kod html');




PYTANIA:
1.Jak przeglądarki pobierają pliki .js. Czy robią to jeden po drugim, czy równolegle?
Jak pobierają css oraz image(równolegle)?