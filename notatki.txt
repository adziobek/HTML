Linki:
------
https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/#w3c - jak działa przeglądarka, jakie procesy zachodzą
by z pliku HTML wyświetlić stronę.
https://www.w3.org/TR/ - W3C standardy

https://www.w3.org/TR/html401/ - HMTL4.01 specification
https://www.w3.org/TR/html51/  - HTML5.1 specification

https://www.w3.org/TR/html51/sec-forms.html#the-form-element - form HTML 5.1 specification
https://www.w3.org/TR/html401/interact/forms.html#h-17.3 -     form HTML 4.01 specification

https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms - mozilla MDN
*** https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Your_first_HTML_form - mozilla MDN

https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/DOM3-Core.html - DOM 3 specification

https://validator.w3.org/ - W3C HTML validator

***https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Forms - lista elementów HTML z wyjaśnieniem

https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps - odbieranie danych z formularzy po stronie serwera

http://caniuse.com/#feat=input-datetime - by sprawdzić co w jakiej przeglądarce jest wspierane
https://www.wufoo.com/html5/ - by sprawdzić wspieranie poczszczególnych kontrolek

Słowa klucze:
-------------
HTML, DOM


Przeglądarka internetowa korzysta z specyfikacji HTML oraz CSS do interpretowania i wyświetlania plików stron
napisanych w HTMLu. Specyfikacje te utrzymuje W3C



Pytania:
---------
1.Dlaczego label i input wiąże się za pomocą atrybutów: for i id? np.
<label for="name">Name:</label>
<input type="text" id="name" name="user_name">

-gdy klikniemy na label to aktywuje się kursor w inpucie

2.Za co odpowiada atrybut type w elemencie <input>?
-decyduje o zachowaniu elementu <input>

3.Jaką wartość domyślą przyjmuje atrybót "type" elementu <input>?
-domyślnie type="text"

4.Czy element <input> trzeba zamykać?
-nie, jest to pusty element więc nie potrzebuje znacznika zamykającego(end tag)
<input type="text" id="name">

Elementy puste - elementy nie mające żadnej zawartości między znacznikiem
otwierającym i zamykającym, np. <br> <input> więc nie potrzebują znacznika
zamykającego.

5.Czym się różni <input type="text" od <textarea>
<input> jest elementem pustym a <textarea> wymaga znacznika zamykającego.
Inaczej się definiuje wartość domyślną pól.

6.Do czego służy element <button>?
- do zatwierdzania formularza/wysyłania danych w formularzu do miejsca wskazanego
przez atrybut action elementu for. Domyślan wartość jego elementu
type="submit"

7.Do czego służy element <button> o type="button> ?
- do budowania custom button

8.Czym różni się <input type="submit" od <button type="submit" ?
Element <button> może mieć label jako element html natomiast
input może mieć tylko prosty text value="prosty text"

9.Po co kontrolkom atrybut id?
- by identyfikować tą kontrolkę w dokumencie html

10.Po co kontrolkom atrybut name?
- pod tym atrybutem/nazwą kryje się informacja którą chcemy przesłac na serwer
"pod nazwą name będzie informacja o imieniu"

11.Jaka jest domyślna metoda wysyłania danych z formularza?
method="get"

12.Co się stanie gdy nie podamy atrybutu action w elemencie <form>?
Dane z formularza zostaną wysłanę na URL strony, która zawiera formularz.(strona się też odświerzy)

13.Jak przekazać dane z formularza do funkcji javascriptowej?
Należy w atrybucie action formularza przekazać nazwę pliku .js który ma się wykonać
(ale do takiego pliku nie można przekazać formularza)
lub wywołać funkcję javascriptową:
action="javascript:handleUserData(user_data);"
przekazując jej nazwę formularza pod którą kryją się dane z formularza.
Do tej funkcji jest przekazywany element DOM formularza, z którego
za pomocą jQuery pobierane są dane formularza.

14.Czy można zagnieżdzać formularze?
-nie, bo będą działać w nieprzewidywalny sposób

15.Do czego służy fieldset w formularzu?
- do dzielenia pół formularza na powiązane sekcje, np.
dane adresowe, dane osobiste.
Jest przydatny zwłaszcza przy długich formularzach
oraz można go wykorzystać gdy mamy kilka radio buttonów.

16.Do czego służy atrybut autofocus?
autofocus - robi focus na daną kontrolkę formularza od razu po załadowaniu strony,
np. kursor pojawia się od razu w inpucie.
Jest atrybutem boolean. Jego obecność w elemencie oznacza, że jest ustawiony na true,
a brak w elemencie że jest ustawiony na false. Nie musimy ustawiać jego wartości.
Można ustawić jego wartość na pusty string lub jego nazwę kanoniczną. Nie można ustawiać
na wartość true lub false,np. autofocus="true"
Zapisy:
autofocus=autofocus oraz autofocus="autofocus" są równoznaczne !!!!

https://www.w3.org/TR/html5/forms.html#autofocusing-a-form-control:-the-autofocus-attribute - działanie autofocus
https://www.w3.org/TR/html5/infrastructure.html#boolean-attributes - boolean attributes

17.Do czego służy atrybut disabled?
-służy do wyłączenia kontrolki na froncie. Użytkownik nie może w nią kliknąć - wprowadzić swoje dane.
Dane przesyłane z formularza nie będą zawierały danych z tej kontrolki.

18.Czym różnią się atrybuty boolean: readonly od disabled?
Dla obu atrybutów nie możemy modyfikować zawartości inputa(domyślnej).
Gdy atrybut jest disabled to wartość inputa nie jest przesyłana z danymi formularza, a
gdy readonly jest.

19.Do czego służą atrybuty size i maxlength dla elementu <input type="text" lub <input type="password"?

size -liczba widzialnych znakow w inpucie, mówi ile przeglądarka powinna pokazać znaków w inpucie
(jak długie pole stworzyć).Domyślny size = 20 znaków.
Zadziała tylko gdy będą wyłączone CSS customowe i przeglądarki(literek o różnym rozmiarze i tak
zmieści się inna ilość)

maxlength - ile użytkownik może maksymalnie wprowadzić znaków do inputa

20.Jakiego typy mogą być elementy <input

-text, password, url, tel, email, search

Dla email, tel najczęściej przeglądarki odpalają swoje walidacje i sygnalizują błąd walidacji, np.
zakreślając okienko na czerwono lub podkreślając text na czerwono.

21.Co się dzieje gdy wysyłamy hasło z <input type="password" zwykłym http?
Gdy wysyłamy dane z formularza zwykłym http to dane te są przesyłane w postaci
prostego tekstu.

22.Błędna walidacja jakich pól uniemożliwia przesłanie formularza?
type= email lub url

23.Czym różni się textarea element od inputa?
<textarea>  jest regular elementem (nie empty elementem). Może mieć child elementy, np.
child element textowy. Można zmieniać jego rozmiar i wprowadzać wiele linii tekstu.

24.Jakie pole wysyłamy z elementu select?
W pierszej kolejności wysyłamy wartość na jaką jest ustawiony atrybut value wybranego przez użytkownika
elementu <option>. Jeśli w tym elemencie nie będzie atrybutu value, wysłana zostanie zawartość elementu option.
<option value="wysłana w pierszej kolejności">Wysłana w drugiej kolejności</option>

25.Czym różnią się elementy <input type="checkbox lub type="radio" od pozostałych?
Ich wartość jest wysyłana jeśli mają atrybut name oraz przyjmują wartość true - są zaznaczone (checked).

26.Co się stanie element nie będzie miał ustawionego atrybutu name?
Nie zostanie wysłany wraz z danymi z formularza.

27.Jaka wartość jest przesyłana z formularza z elementów <input type=text, password, email
a jaka z elementów type="radio" i type="checkbox" ?

Dla elementów tekstowych jest przesyłana wartość domyślna z atrybutu value lub
wartość wprowadzona przez użytkownika.
Dla elementów boolean jest przesyłana wartość z atrybutu value lub wartość 'on' gdy
atrybut value nie zostanie ustawiony.
np. <input type="checkox" name="apple" value="apple" - zostanie wysłany
apple: apple

28.Jak z radio buttonów stworzyć grupę?
Gdy dla kilku radio buttonów ustawimy taką samą wartość atrybutu name to
stworzą one grupę. Wartość tylko jednego radio buttona (zaznaczonego) zostanie wysłana
na akcję wysyłającą formularz.

29.Czy IE wspiera <input type=number"

IE10, IE11 nie wspiera w pełni <input type="number" .
Brak jest przycisku zwiększającego/zmiejszającego wartość pola.

30.Za pomocą jakich elementów użytkownik może wprowadzić liczby?
<input type="number" oraz
<input type="range" (slider)
W obu przydkach korzystamy z atrybutów min, max, step

31.Kiedy stosować slider?
Slider stosować kiedy nie zależy nam na dokładności. Aby wyświetlic aktualną wartość
należy dorobić javascript, który będzie ją wyświetlał.

32.Jakie przeglądarki wspierają <input type="date"  i co z resztą?
Datepicker wspiera jedynie Chrome. W pozostałych przeglądarkach trzeba używać Javascriptu
by korzystać z kalendarza.
Dane przesyłane z formularza:
date:2017-07-01
datetime:2017-07-01T01:01
month:2017-07
time:01:01
week:2017-W26

//Sending and retrieving form data
33.Jakie adresy można podać w atrybucie action elementu <form>?
Można podać(adres bezwzględny i względny):
-absolute URL - <form action="http://foo.com"> - dane wysyłane są na serwer podany w URL
-relative URL - <form action="/somewhere_else"> - dane wysyłane są na ten sam serwer pod inny URL

34.W jakich wersjach HTML konieczne było podawanie atrybutu action
wskazującego, że dane z formularza powinny trafić na stronę, na której znajduje się formularz?
<form action="#"> - zapis taki powinien się znaleźć na stronie w wersji HTML do HTML5.
HTML5 nie wymaga już podawania atrybutu action.

35.W jaki sposób mogą być przesyłane dane z formularza?
-jeśli w action podamy link z HTTPS a cała strona będzie serwowana za pomocą HTTP to
dane zostaną zaszyfrowane i wysłane
-jeśli strona będzie serwowana za pomocą HTTPS a formularz za pomocą HTTP to przeglądarka
wyświetlni wyjątek bezpieczeństwa

36.Czym się różni metoda POST od GET przy wysyłaniu formularza?
W metodzie GET dane wysyłane są w URL(headerze żądania) a w POST w body żądania.

37.Kiedy używać metody POST do wysyłania danych formularza?
Wtedy gdy chcemy przesyłać dane wrażliwe(np. hasła i nie chcemy ich w URLu pokazywać)
oraz gdy przesyłamy dużą ilość informacji, które nie zmieściły by się w URLu.

38.W jakiej postaci dane z formularza trafiają do serwera?
Trafiają w postaci stringa składającego się z par klucz=wartość

39.Jakie są frameworki do pisania części serwerowej, odbierającej requesty?
-Java
-Grails for Java
-Symfony for PHP
-Django for Python
-Express for Node.js

40.Czy za pomocą protokołu HTTP można przesyłać pliki?
HTTP jest protokołem tekstowym. Aby przesyłać pliki w postaci binarnej należy spełnić
3 wymagania:
1 - ustawić metodę na POST, bo pliki nie mogą być wysyłane w formularzu
2 - ustawić wartość atrybutu enctype elementu <form> na multipart/form-data
bo dane mogą być przesyłane w kilku paczkach.
Domyślnie dla metody GET enctype jest ustawiany na x-www-form-urlencoded.
Atrybut enctype ustawia Content-Type w headerze requestu który jest tworzony po
akcji zatwierdzenia formularza.
3 - stworzyć odpowiednią kontrolkę/file picker do wskazania plików do wysłania z formularzu


-jak przeglądarka zasysa specyfikacje HMTL, CSS, DOM z W3C
 (napisać do autorki filmiku o działaniu przeglądarek)
-jak działa domyślna validacja w przeglądarkach
-jak działa dodawanie styli przez przeglądarkę(styli przeglądarki)
-czy da radę wysłać formularz za pomocą innych metod HTTP, np. OPTION











